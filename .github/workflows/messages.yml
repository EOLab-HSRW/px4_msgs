name: Get Messages

on:
  repository_dispatch:
    types: [successful-builds]
  workflow_dispatch:


jobs:
  fetch-messages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set drone matrix
        id: set-matrix
        run: |
          echo "Setting matrix from payload or default..."
          if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            drones=$(jq -c <<< '${{ toJson(github.event.client_payload.successful_builds) }}')
          else
            drones='[]'
          fi
          echo "matrix=$drones" >> $GITHUB_OUTPUT
  build:
    needs: fetch-messages
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/eolab-hsrw/easy-px4:ubuntu-22.04
    permissions:
      contents: write 
    strategy:
      fail-fast: false
      matrix:
        drone: ${{ fromJson(github.event.client_payload.successful_builds) }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: Configure Git committer
        run: |
          git config --global user.email "eolab@hochschule-rhein-waal.de"
          git config --global user.name "eolab-bot"
      - name: Mark repo as safe
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: install tool eolab-drones
        run: |
         pip install git+https://github.com/EOLab-HSRW/drones-fw.git@main#egg=eolab_drones
      - name: checkout to drone branch
        run: |
          git checkout -B "${{ matrix.drone }}"
      - name: collect msg using eolab-tool
        run: | 
          DEBUG=1 eolab_drones build --type sitl --drone ${{ matrix.drone }} --skip-compilation --msgs-output ../px4_msgs
      - name: commit changes and push
        run: | 
         git add .
         git commit -m "Sync messages"
         git push -f origin ${{ matrix.drone }}  
